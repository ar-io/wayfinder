name: Release

on:
  push:
    branches:
      - main
      - alpha

jobs:
  # run the monorepo.yml to confirm all tests, linting and formatting is passing
  monorepo:
    uses: ./.github/workflows/pr-check.yml

  release:
    needs: monorepo
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Setup Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check Prerelease Mode for Alpha Branch
        if: github.ref == 'refs/heads/alpha'
        run: |
          if [ -f ".changeset/pre.json" ]; then
            echo "Already in pre-release mode, skipping..."
          else
            npx changeset pre enter alpha
          fi

      - name: Exit Prerelease Mode for Main Branch
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -f ".changeset/pre.json" ]; then
            echo "Exiting pre-release mode for main branch..."
            npx changeset pre exit
          else
            echo "Not in pre-release mode, skipping..."
          fi

      - name: Build all packages
        run: npm run build --workspaces
        
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npx changeset publish
          commit: "chore(release): version packages"
          title: "chore(release): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push Tags
        if: steps.changesets.outputs.published == 'true'
        run: git push --follow-tags

  # TODO: send slack notification

